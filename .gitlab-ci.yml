stages:
  - test
  - build
  - deploy

linux_build:
    stage: build
    image: ubuntu:14.04
    before_script:
      - apt-get update
      - apt-get install -y git cmake build-essential autoconf libtool pkg-config libssl-dev
      - git submodule update --init --recursive

    script:
      # curl
      - cd 3d-party/curl
      - ./buildconf
      - ./configure
      - make
      - make install
      - cd ../..
      
      # appUpdater
      - mkdir build
      - cd build
      - cmake ../
      - cd ..
      - cmake --build build --config Release
     
      # ctest
      - cd build
      - ctest -j10 -C Release -T test --output-on-failure
      - cd ..

      # prepare artifacts
      - cp build/src/*appUpdaterShared.* ./
      - cp build/src/*appUpdaterStatic.* ./
      - cp src/updater.h ./
    artifacts:
        name: linux_release
        paths:
          - ./*appUpdaterShared.*
          - ./*appUpdaterStatic.*
          - ./updater.h
        expire_in: 3 day
    tags:
      - linux
     
win_build: 
    stage: build
    variables:
        WIN_MSVC_SHELL: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build'
    before_script:
        - git submodule update --init --recursive
    script:
        # curl
        - cmd /c 'mv 3d-party/curl/src/tool_hugehelp.c.cvs 3d-party/curl/src/tool_hugehelp.c &
                  set PATH = %WIN_MSVC_SHELL%;%PATH% &
                  vcvarsall x86 &
                  cd 3d-party/curl/winbuild & 
                  nmake /f Makefile.vc mode=dll WITH_SSL=dll SSL_PATH="%SSL_PATH%"'
        # appUpdater
        #- mkdir build
        #- cd build
        #- cmake ../
        #- cd ..
        #- cmake --build build --config Release
      
        # ctest
        #- cd build
        #- ctest -j10 -C Release -T test --output-on-failure
        #- cd ..

        # prepare artifacts
        # - cp build/src/*appUpdaterShared.* ./
        # - cp build/src/*appUpdaterStatic.* ./
        # - cp src/updater.h ./
      # artifacts:
      #     name: windows_release
      #     paths:
      #       - ./*appUpdaterShared.*
      #       - ./*appUpdaterStatic.*
      #       - ./updater.h
      #     expire_in: 3 day
    tags:
      - win

linux_deploy:
    variables:
      LINUX_ARTIFACT_URL: "$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/download?job=linux_build"
      RELEASES_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"
      RELEASES_ASSETS_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"
    stage: deploy
    only:
      - tags
    script:
      - apt-get update
      - apt-get install -y curl
      - echo "$LINUX_ARTIFACT_URL | $RELEASES_URL | $RELEASES_ASSETS_URL"     
      - 'curl -X POST -H "PRIVATE-TOKEN: $fullAccessToken" -d name=$CI_COMMIT_TAG -d url="$LINUX_ARTIFACT_URL" --url "$RELEASES_URL"'
      - 'curl -X POST -H "PRIVATE-TOKEN: $fullAccessToken" -d name="linux" -d url="$LINUX_ARTIFACT_URL" --url "$RELEASES_ASSETS_URL"'